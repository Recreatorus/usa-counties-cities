"use strict";function isTouchDeviceCheck(){var t=" -webkit- -moz- -o- -ms- ".split(" "),e=function(t){return window.matchMedia(t).matches};if("ontouchstart"in window||window.DocumentTouch&&document instanceof DocumentTouch)return!0;var i=["(",t.join("touch-enabled),("),"heartz",")"].join("");return e(i)}async function getJson(){const t=await fetch("./data/cities.json"),e=await t.json();return e}function clearDisplay(){for(;outDiv.firstChild;)outDiv.removeChild(outDiv.firstChild)}document.onreadystatechange=function(){"complete"==document.readyState&&(console.group("Status:"),console.log("Loading: %c%s","padding: 2px 5px; background-color: #7bd235; color: #fff",document.readyState),console.groupEnd())};class Accordion{constructor(t){this.el=t,this.summary=t.querySelector("summary"),this.content=t.querySelector(".content"),this.animation=null,this.isClosing=!1,this.isExpanding=!1,this.summary.addEventListener("click",t=>this.onClick(t))}onClick(t){t.preventDefault(),this.el.style.overflow="hidden",this.isClosing||!this.el.open?this.open():(this.isExpanding||this.el.open)&&this.shrink()}shrink(){this.isClosing=!0;const t=`${this.el.offsetHeight}px`,e=`${this.summary.offsetHeight}px`;this.animation&&this.animation.cancel(),this.animation=this.el.animate({height:[t,e]},{duration:300,easing:"ease-out"}),this.animation.onfinish=(()=>this.onAnimationFinish(!1)),this.animation.oncancel=(()=>this.isClosing=!1)}open(){this.el.style.height=`${this.el.offsetHeight}px`,this.el.open=!0,window.requestAnimationFrame(()=>this.expand())}expand(){this.isExpanding=!0;const t=`${this.el.offsetHeight}px`,e=`${this.summary.offsetHeight+this.content.offsetHeight}px`;this.animation&&this.animation.cancel(),this.animation=this.el.animate({height:[t,e]},{duration:300,easing:"ease-out"}),this.animation.onfinish=(()=>this.onAnimationFinish(!0)),this.animation.oncancel=(()=>this.isExpanding=!1)}onAnimationFinish(t){this.el.open=t,this.animation=null,this.isClosing=!1,this.isExpanding=!1,this.el.style.height=this.el.style.overflow=""}}document.querySelectorAll("details").forEach(t=>{new Accordion(t)});const html=document.documentElement,body=document.body,radios=document.getElementsByName("themes");isTouchDeviceCheck()?html.classList.add("touch-device"):html.classList.add("pointer-device");var i=0;for(i=0;i<radios.length;i++)radios[i].addEventListener("change",function(){body.classList.remove(body.classList.item(0)),body.classList.add(this.id)});const inpField=document.getElementById("country-input"),close=document.querySelector(".close"),search=document.querySelector(".search"),lengthData=document.querySelector(".lengthData"),outDiv=document.getElementById("display");getJson().then(t=>{function e(t){return l.test(t)}var i=t.map(function(t){return`${t.state}`}),n=[...new Set(i)],o=t.map(function(t){return`${t.city}`});let s=o.map(function(t){return{label:t,group:"City"}}),a=n.map(function(t){return{label:t,group:"State"}}).concat(s),l=new RegExp(/^[a-zA-Z\s]+$/);autocomplete({input:document.getElementById("country-input"),preventSubmit:!0,disableAutoSelect:!0,minLength:1,onSelect:function(t,e){e.value=t.label,document.getElementById("country-input").blur(),close.style.visibility="visible",search.style.visibility="hidden"},fetch:function(t,e){let i=t.toLowerCase();e(a.filter(function(t){return-1!==t.label.toLowerCase().indexOf(i)}))},render:function(t,i){document.querySelector("details").removeAttribute("open");let n=document.createElement("div");if(e(i)){let e=new RegExp(i,"gi"),o=t.label.replace(e,function(t){return"<strong>"+t+"</strong>"});n.innerHTML=o}else n.textContent=t.label;return n},emptyMsg:"No countries found",customize:function(t,e,i,n){n<100&&(i.style.top="",i.style.bottom=window.innerHeight-e.bottom+t.offsetHeight+"px",i.style.maxHeight="140px")}})}),inpField.focus(),close.addEventListener("click",()=>{close.style.visibility="hidden",search.style.visibility="visible",lengthData.textContent="",inpField.value="",clearDisplay(),inpField.focus()}),inpField.addEventListener("change",t=>{let e=t.target.value;clearDisplay(),outDiv.focus(),getJson().then(t=>{let i=t.filter(t=>t.state===e||t.city===e),n=i.sort(function(t,e){return e.population-t.population});lengthData.innerHTML=`Cities found: <span>${i.length}</span>`,n.forEach(t=>outDiv.insertAdjacentHTML("beforeend",`\n          <div class="card" data-visible="false">\n            <div class="description">\n              <p>State: <span>${t.state}</span></p>\n              <p>City: <a href="https://www.google.ru/maps/@${t.latitude},${t.longitude},11.74z" class="link" target="_blank" title="Where is it?" rel="noopener noreferrer"><span>${t.city}</span></a></p>\n              <p>Population: <span>${t.population.replace(/\B(?=(\d{3})+(?!\d))/g," ")}</span></p>\n              <p>Growth (2000 - 2013): <span>${t.growth_from_2000_to_2013}</span></p>\n            </div>\n          </div>\n        `))}),setTimeout(t=>{const e=document.querySelectorAll(".card");for(t=0;t<e.length;t++)e[t].setAttribute("data-visible",!0)},250)});